// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[6..8], a=ram1, b=ram2, c=ram3, d=ram4, e=ram5, f=ram6, g=ram7, h=ram8);
    RAM64(in=in, load=ram1, address=address[0..5], out=ram1Out);
    RAM64(in=in, load=ram2, address=address[0..5], out=ram2Out);
    RAM64(in=in, load=ram3, address=address[0..5], out=ram3Out);
    RAM64(in=in, load=ram4, address=address[0..5], out=ram4Out);
    RAM64(in=in, load=ram5, address=address[0..5], out=ram5Out);
    RAM64(in=in, load=ram6, address=address[0..5], out=ram6Out);
    RAM64(in=in, load=ram7, address=address[0..5], out=ram7Out);
    RAM64(in=in, load=ram8, address=address[0..5], out=ram8Out);
    Mux8Way16(a=ram1Out, b=ram2Out, c=ram3Out, d=ram4Out, e=ram5Out, f=ram6Out, g=ram7Out, h=ram8Out, sel=address[6..8], out=out);
}